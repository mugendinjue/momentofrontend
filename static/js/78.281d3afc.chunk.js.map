{"version":3,"sources":["components/notes/NoteListItem.js","redux/notes/Action.js","components/notes/NoteList.js","components/notes/NoteSearch.js","components/notes/NoteContent.js","views/notes/Notes.js"],"names":["NoteListItem","onClick","id","active","noteTitle","noteColor","noteDatef","onDeleteClick","NavItem","className","updateNote","field","value","type","UPDATE_NOTE","NoteList","notes","useSelector","state","noteSearch","filter","t","deleted","title","toLocaleLowerCase","concat","includes","filterNotes","notesReducer","noteContent","dispatch","useDispatch","Nav","style","height","length","map","note","key","SELECTED_NOTES","DELETE_NOTE","color","Date","datef","toLocaleDateString","weekday","year","month","NoteSearch","searchTerm","Form","Input","name","onChange","e","SEARCH_NOTES","target","placeholder","NoteContent","noteDetails","notesContent","ref","node","Button","size","preventDefault","ADD_NOTE","addNote","rows","useState","showLeft","setShowLeft","showRight","setshowRight","showRightPart","bind"],"mappings":"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","file":"static/js/78.281d3afc.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { NavItem } from \"reactstrap\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst NoteListItem = ({\r\n  onClick,\r\n  id,\r\n  active,\r\n  noteTitle,\r\n  noteColor,\r\n  noteDatef,\r\n  onDeleteClick,\r\n}) => (\r\n  <NavItem className={active === id ? \"bg-light\" : \"\"}>\r\n    <span className=\"note-item\">\r\n      <div className=\"note-content\" onClick={onClick}>\r\n        <span className={`line-brd bg-${noteColor}`}></span>\r\n        <h5 className=\"note-title\">{noteTitle}</h5>\r\n        <span className=\"note-date\"> {noteDatef}</span>\r\n      </div>\r\n      <i\r\n        onClick={onDeleteClick}\r\n        className=\"fas fa-trash-alt deletenote ml-3\"\r\n      ></i>\r\n    </span>\r\n  </NavItem>\r\n);\r\n\r\nNoteListItem.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n  noteTitle: PropTypes.string.isRequired,\r\n  noteDatef: PropTypes.string.isRequired,\r\n  noteColor: PropTypes.string.isRequired,\r\n  onDeleteClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default NoteListItem;\r\n","import {SELECTED_NOTES, SEARCH_NOTES, UPDATE_NOTE, DELETE_NOTE, ADD_NOTE} from '../constants/';\r\n\r\nexport const openNote = id => ({\r\n\ttype : SELECTED_NOTES,\r\n\tid\r\n})\r\n\r\nexport const noteSearch = (searchTerm) => ({\r\n    type: SEARCH_NOTES,\r\n    searchTerm\r\n})\r\nexport const deleteNote = id => ({\r\n    type: DELETE_NOTE,\r\n    id\r\n});\r\nexport const updateNote = (id, field, value) => ({\r\n    type: UPDATE_NOTE,\r\n    id: id,\r\n    field: field,\r\n    value: value\r\n});\r\n\r\n\r\nexport const addNote = (id,title, color) => ({\r\n\ttype: ADD_NOTE,\r\n\tid: id++,\r\n\tcolor:\"danger\",\r\n\ttitle: \"This is new Note\"\t\r\n});","import React from \"react\";\r\nimport Note from \"./NoteListItem\";\r\nimport { Nav } from \"reactstrap\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { openNote } from \"../../redux/notes/Action\";\r\nimport { deleteNote } from \"../../redux/notes/Action\";\r\n\r\nconst NoteList = () => {\r\n  const filterNotes = (notes, noteSearch) => {\r\n    if (noteSearch !== \"\")\r\n      return notes.filter(\r\n        (t) =>\r\n          !t.deleted &&\r\n          t.title\r\n            .toLocaleLowerCase()\r\n            .concat(\" \")\r\n            .includes(noteSearch.toLocaleLowerCase())\r\n      );\r\n    else return notes.filter((t) => !t.deleted);\r\n  };\r\n\r\n  const notes = useSelector((state) =>\r\n    filterNotes(state.notesReducer.notes, state.notesReducer.noteSearch)\r\n  );\r\n  const active = useSelector((state) => state.notesReducer.noteContent);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <Nav className=\"list-unstyled d-block mailbox chat-users\">\r\n      <div className=\"message-center\" style={{ height: \"calc(100vh - 274px)\" }}>\r\n        {notes && notes.length\r\n          ? notes.map((note) => (\r\n              <Note\r\n                key={note.id}\r\n                {...note}\r\n                active={active}\r\n                onClick={() => dispatch(openNote(note.id))}\r\n                onDeleteClick={() => dispatch(deleteNote(note.id))}\r\n                noteTitle={note.title}\r\n                noteColor={note.color}\r\n                noteDatef={new Date(note.datef).toLocaleDateString({\r\n                  weekday: \"short\",\r\n                  year: \"numeric\",\r\n                  month: \"short\",\r\n                })}\r\n              />\r\n            ))\r\n          : \"no notes\"}\r\n      </div>\r\n    </Nav>\r\n  );\r\n};\r\n\r\nexport default NoteList;\r\n","import React from \"react\";\r\nimport { Form, Input } from \"reactstrap\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { noteSearch } from \"../../redux/notes/Action\";\r\n\r\nconst NoteSearch = () => {\r\n  const searchTerm = useSelector((state) => state.notesReducer.noteSearch);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <div className=\"p-3 border-bottom\">\r\n      <h5 className=\"card-title\">Search Note</h5>\r\n      <Form>\r\n        <div className=\"position-relative has-icon-left\">\r\n          <Input\r\n            className=\"form-control\"\r\n            id=\"searchNote\"\r\n            name=\"searchNote\"\r\n            type=\"text\"\r\n            onChange={(e) => dispatch(noteSearch(e.target.value))}\r\n            value={searchTerm}\r\n            placeholder=\"Type here to search...\"\r\n          />\r\n        </div>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NoteSearch;\r\n","import React, { Fragment } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Button, Input } from \"reactstrap\";\r\nimport { updateNote, addNote } from \"../../redux/notes/Action\";\r\n\r\nconst NoteContent = () => {\r\n  const noteDetails = useSelector(\r\n    (state) => state.notesReducer.notes[state.notesReducer.notesContent - 1]\r\n  );\r\n  let title, color;\r\n  const id = useSelector((state) => state.notesReducer.notes.length + 1);\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <Fragment>\r\n      <div className=\"border-bottom p-3 text-right\">\r\n        <input\r\n          className=\"d-none\"\r\n          type=\"text\"\r\n          name=\"title\"\r\n          id=\"title\"\r\n          ref={(node) => (title = node)}\r\n        />\r\n        <input\r\n          className=\"d-none\"\r\n          type=\"text\"\r\n          name=\"color\"\r\n          id=\"color\"\r\n          ref={(node) => (color = node)}\r\n        />\r\n        <Button\r\n          className=\"btn btn-success ml-auto\"\r\n          size=\"sm\"\r\n          onClick={(e) => {\r\n            e.preventDefault();\r\n            dispatch(addNote(id, title.value, color.value));\r\n            title.value = \"\";\r\n            color.value = \"\";\r\n          }}\r\n        >\r\n          Add New Note\r\n        </Button>\r\n      </div>\r\n      {noteDetails && noteDetails.deleted === false ? (\r\n        <div className=\"p-3\">\r\n          <h4 className=\"mt-2\">Change Note Color</h4>\r\n          <Input\r\n            type=\"select\"\r\n            className=\"col-md-2\"\r\n            name=\"select\"\r\n            value={noteDetails.color}\r\n            onChange={(e) =>\r\n              dispatch(updateNote(noteDetails.id, \"color\", e.target.value))\r\n            }\r\n          >\r\n            <option>warning</option>\r\n            <option>info</option>\r\n            <option>danger</option>\r\n            <option>primary</option>\r\n            <option>success</option>\r\n          </Input>\r\n          <h4 className=\"mt-4\">Edit Note</h4>\r\n          <Input\r\n            type=\"textarea\"\r\n            id=\"title\"\r\n            name=\"title\"\r\n            rows=\"5\"\r\n            value={noteDetails.title}\r\n            onChange={(e) =>\r\n              dispatch(updateNote(noteDetails.id, \"title\", e.target.value))\r\n            }\r\n          />\r\n        </div>\r\n      ) : (\r\n        <div className=\"d-flex mt-3 p-4 flex-column align-items-center justify-content-center\">\r\n          <i className=\"ti-agenda display-5\"></i>\r\n          <h4 className=\"mt-2\">Please select a Note or Add Note.</h4>\r\n        </div>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default NoteContent;\r\n","import React, { Fragment, useState } from \"react\";\r\n\r\nimport NoteList from \"../../components/notes/NoteList\";\r\nimport NoteSearch from \"../../components/notes/NoteSearch\";\r\nimport NoteContent from \"../../components/notes/NoteContent\";\r\nimport \"./Notes.css\";\r\nexport default () => {\r\n  const [showLeft, setShowLeft] = useState(false);\r\n  const [showRight, setshowRight] = useState(false);\r\n\r\n  const showLeftPart = () => {\r\n    setShowLeft(!showLeft);\r\n  };\r\n\r\n  const showRightPart = () => {\r\n    setshowRight(!showRight);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"app-drawer\">\r\n        <div\r\n          className={\r\n            \"left-part bg-white \" + (showLeft === true ? \"show-panel\" : \"\")\r\n          }\r\n        >\r\n          <NoteSearch />\r\n          <NoteList showRightPart={showRightPart.bind(null)} />\r\n        </div>\r\n        <div className=\"right-part bg-white app-drawer-content\">\r\n          <div\r\n            className={\"\" + (showRight === true ? \"show-right-left-panel\" : \"\")}\r\n          >\r\n            <span\r\n              onClick={showLeftPart.bind(null)}\r\n              className={\r\n                \"bg-primary show-left-part text-white d-block d-lg-none \" +\r\n                (showLeft === true ? \"left-part-open\" : \"\")\r\n              }\r\n            >\r\n              <i\r\n                className={\r\n                  showLeft === true\r\n                    ? \"fas fa-chevron-left\"\r\n                    : \"fas fa-chevron-right\"\r\n                }\r\n              ></i>\r\n            </span>\r\n            <NoteContent />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n"],"sourceRoot":""}